/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/login': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Login
     * @description Authenticate user and return user data
     */
    post: operations['trips_api_login']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/logout': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Logout
     * @description Log out the current user (session-based)
     */
    post: operations['trips_api_logout']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/trips': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * List Trips
     * @description Get all trips
     */
    get: operations['trips_api_list_trips']
    put?: never
    /**
     * Create Trip
     * @description Create a new trip
     */
    post: operations['trips_api_create_trip']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/trips/{trip_id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Trip
     * @description Get a specific trip by ID
     */
    get: operations['trips_api_get_trip']
    /**
     * Update Trip
     * @description Update a trip
     */
    put: operations['trips_api_update_trip']
    post?: never
    /**
     * Delete Trip
     * @description Delete a trip
     */
    delete: operations['trips_api_delete_trip']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    /** Driver */
    Driver: {
      /** ID */
      id?: number | null
      /** License Number */
      license_number: string
      /** Phone */
      phone: string
      /** Address */
      address: string
      /**
       * Created At
       * Format: date-time
       */
      created_at: string
      /**
       * Updated At
       * Format: date-time
       */
      updated_at: string
    }
    /** LoginResponseSchema */
    LoginResponseSchema: {
      /** Success */
      success: boolean
      user?: components['schemas']['User'] | null
      driver?: components['schemas']['Driver'] | null
      /** Message */
      message?: string
    }
    /** User */
    User: {
      /** ID */
      id?: number | null
      /** Last Login */
      last_login?: string | null
      /**
       * Superuser Status
       * @description Designates that this user has all permissions without explicitly assigning them.
       * @default false
       */
      is_superuser: boolean
      /**
       * Username
       * @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
       */
      username: string
      /** First Name */
      first_name?: string | null
      /** Last Name */
      last_name?: string | null
      /** Email Address */
      email?: string | null
      /**
       * Staff Status
       * @description Designates whether the user can log into this admin site.
       * @default false
       */
      is_staff: boolean
      /**
       * Active
       * @description Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
       * @default true
       */
      is_active: boolean
      /**
       * Date Joined
       * Format: date-time
       */
      date_joined?: string
    }
    /** LoginSchema */
    LoginSchema: {
      /** Username */
      username: string
      /** Password */
      password: string
    }
    /** Trip */
    Trip: {
      /** ID */
      id?: number | null
      /** Driver */
      driver: number
      /** Co Driver */
      co_driver?: number | null
      /** Truck */
      truck: number
      /** Trailer */
      trailer: number
      /**
       * Status
       * @default planning
       */
      status: string
      /**
       * Created At
       * Format: date-time
       */
      created_at: string
      /**
       * Updated At
       * Format: date-time
       */
      updated_at: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  trips_api_login: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LoginSchema']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['LoginResponseSchema']
        }
      }
    }
  }
  trips_api_logout: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  trips_api_list_trips: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Trip'][]
        }
      }
    }
  }
  trips_api_create_trip: {
    parameters: {
      query: {
        payload: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Trip']
        }
      }
    }
  }
  trips_api_get_trip: {
    parameters: {
      query?: never
      header?: never
      path: {
        trip_id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Trip']
        }
      }
    }
  }
  trips_api_update_trip: {
    parameters: {
      query: {
        payload: string
      }
      header?: never
      path: {
        trip_id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Trip']
        }
      }
    }
  }
  trips_api_delete_trip: {
    parameters: {
      query?: never
      header?: never
      path: {
        trip_id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
}
